@model LocaliztionCRUD.DAL.RisorseLocalizzazioneLabel

@{
    ViewBag.Title = "Insert";
}

<h2>Insert</h2>

@using (Html.BeginForm("DoInsert", "Label", null, FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>RisorseLocalizzazioneLabel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.idModulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idModulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idModulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.labelFor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.labelFor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.labelFor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lingua, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lingua, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lingua, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.label, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.label, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.label, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    <a class="btn btn-default"  onclick="AjaxInsert()" >Insert</a>




    <script type="text/javascript">

        function AjaxInsert() {
            //creo l'oggetto associando le variabili
            var Data = {
                idModulo : $('#idModulo').val(),
                labelFor : $('#labelFor').val(),
                lingua : $('#lingua').val(),
                label : $('#label').val(),
            };
            //chiamata ajax
            $.ajax({
                //imposto il tipo di invio dati (GET O POST)
                type: "POST",
                //Dove devo inviare i dati recuperati dal form?
                url: "@Url.Action("DoInsertJson", "Label")",
                //Quali dati devo inviare? e che tipo
                data: Data,
                success: function (data) {
                    alert(data.messaggio);
                },
                error: function () {
                    alert("Chiamata fallita, riprova");
                    //sempre meglio impostare una callback in caso di fallimento
                }

            });
        };      
                
    </script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
